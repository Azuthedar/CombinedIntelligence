//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CombinedIntelligenceAPI.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CombinedIntelligenceEntities : DbContext
    {
        public CombinedIntelligenceEntities()
            : base("name=CombinedIntelligenceEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        [DbFunction("CombinedIntelligenceEntities", "SplitTagIds")]
        public virtual IQueryable<SplitTagIds_Result> SplitTagIds(string list, string delimiter)
        {
            var listParameter = list != null ?
                new ObjectParameter("List", list) :
                new ObjectParameter("List", typeof(string));
    
            var delimiterParameter = delimiter != null ?
                new ObjectParameter("Delimiter", delimiter) :
                new ObjectParameter("Delimiter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<SplitTagIds_Result>("[CombinedIntelligenceEntities].[SplitTagIds](@List, @Delimiter)", listParameter, delimiterParameter);
        }
    
        public virtual int AcceptAns(Nullable<int> answerId)
        {
            var answerIdParameter = answerId.HasValue ?
                new ObjectParameter("AnswerId", answerId) :
                new ObjectParameter("AnswerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AcceptAns", answerIdParameter);
        }
    
        public virtual int addQuestionTag(Nullable<int> questionId, Nullable<int> tagId)
        {
            var questionIdParameter = questionId.HasValue ?
                new ObjectParameter("QuestionId", questionId) :
                new ObjectParameter("QuestionId", typeof(int));
    
            var tagIdParameter = tagId.HasValue ?
                new ObjectParameter("TagId", tagId) :
                new ObjectParameter("TagId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("addQuestionTag", questionIdParameter, tagIdParameter);
        }
    
        public virtual int getAllQuestions()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("getAllQuestions");
        }
    
        public virtual ObjectResult<GetAnswers_Result> GetAnswers(Nullable<int> qID)
        {
            var qIDParameter = qID.HasValue ?
                new ObjectParameter("QID", qID) :
                new ObjectParameter("QID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAnswers_Result>("GetAnswers", qIDParameter);
        }
    
        public virtual ObjectResult<getAVotes_Result> getAVotes(Nullable<int> answerId)
        {
            var answerIdParameter = answerId.HasValue ?
                new ObjectParameter("AnswerId", answerId) :
                new ObjectParameter("AnswerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getAVotes_Result>("getAVotes", answerIdParameter);
        }
    
        public virtual ObjectResult<getQTags_Result> getQTags(Nullable<int> questionId)
        {
            var questionIdParameter = questionId.HasValue ?
                new ObjectParameter("QuestionId", questionId) :
                new ObjectParameter("QuestionId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getQTags_Result>("getQTags", questionIdParameter);
        }
    
        public virtual ObjectResult<GetQuestions_Result> GetQuestions(string tags)
        {
            var tagsParameter = tags != null ?
                new ObjectParameter("Tags", tags) :
                new ObjectParameter("Tags", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetQuestions_Result>("GetQuestions", tagsParameter);
        }
    
        public virtual ObjectResult<getQVotes_Result> getQVotes(Nullable<int> questionId)
        {
            var questionIdParameter = questionId.HasValue ?
                new ObjectParameter("QuestionId", questionId) :
                new ObjectParameter("QuestionId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getQVotes_Result>("getQVotes", questionIdParameter);
        }
    
        public virtual ObjectResult<string> getTeamName(Nullable<int> teamID)
        {
            var teamIDParameter = teamID.HasValue ?
                new ObjectParameter("TeamID", teamID) :
                new ObjectParameter("TeamID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("getTeamName", teamIDParameter);
        }
    
        public virtual ObjectResult<GetUser_Result> GetUser(Nullable<int> uID)
        {
            var uIDParameter = uID.HasValue ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUser_Result>("GetUser", uIDParameter);
        }
    
        public virtual ObjectResult<GetUserLogin_Result> GetUserLogin(string email, string password)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUserLogin_Result>("GetUserLogin", emailParameter, passwordParameter);
        }
    
        public virtual ObjectResult<string> getUserTags(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("getUserTags", userIDParameter);
        }
    
        public virtual int updateAVote(Nullable<int> userID, Nullable<int> vote, Nullable<int> answerId)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var voteParameter = vote.HasValue ?
                new ObjectParameter("vote", vote) :
                new ObjectParameter("vote", typeof(int));
    
            var answerIdParameter = answerId.HasValue ?
                new ObjectParameter("AnswerId", answerId) :
                new ObjectParameter("AnswerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateAVote", userIDParameter, voteParameter, answerIdParameter);
        }
    
        public virtual int updateQVote(Nullable<int> userID, Nullable<int> vote, Nullable<int> questionId)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var voteParameter = vote.HasValue ?
                new ObjectParameter("vote", vote) :
                new ObjectParameter("vote", typeof(int));
    
            var questionIdParameter = questionId.HasValue ?
                new ObjectParameter("QuestionId", questionId) :
                new ObjectParameter("QuestionId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateQVote", userIDParameter, voteParameter, questionIdParameter);
        }
    
        public virtual int updateScore(Nullable<int> userID, Nullable<int> score)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var scoreParameter = score.HasValue ?
                new ObjectParameter("score", score) :
                new ObjectParameter("score", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateScore", userIDParameter, scoreParameter);
        }
    
        public virtual ObjectResult<getUserAnswers_Result> getUserAnswers(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getUserAnswers_Result>("getUserAnswers", userIDParameter);
        }
    
        public virtual ObjectResult<getUserQuestions_Result> getUserQuestions(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getUserQuestions_Result>("getUserQuestions", userIDParameter);
        }
    }
}
